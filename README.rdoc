== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.

2.10 Demonstracja Rails, budowanie ksiegi gosci, cz. 2 viedopoint
2.11 Bonus: sztuczka z edytorem
3. Modele
3.6
3.7 Callbacki
3.8 Scopes - to nic innego jak nazwana kwerenda

3.9 Asocjacja belongs_to i has_many
3.10 Asocjacaja has_and_belongs_to_many - czyli przypisanie wiele do wielu (robimy to za pomoca tabeli posredniej
    - ktora przechowuje pojedyncze przypisanie taga do posta)
3.11 Asocjacja has_many :through

     http://guides.rubyonrails.org/association_basics.html#the-has-many-through-association

3.12 Kwerendy na asocjacjach
4. Kontrollery
4.3 Akcja Index
4.4 Akcja New for formularz


5.5 Ukrywanie JavaScript i CoffeeScript
   - Uzyciek coffee scriptu jest o wiele prostsze, nie trzeba pisac tyle linijek kodu i jest przyjemniejszy

   index
   <% @posts.each do |post| %>
       <blockquote>
         <p><%= post.body %></p>
         <foother><cite><%= post.author %></cite></foother>
       </blockquote>
   <% end %>



   hide.coffee
   $ ->
     $(".container blockquote").on "click", ->
       $(this).hide(400)

   hide.js
   $(function() {
       $(".container blockquote").on("click", function () {
           $(this).hide(300);
       })
   })


5.6 Ajax: linki asynchroniczne

    1.Najpierw scie≈ºki
      resources :posts do
        collection do
          get :surprise
        end
      end


    2.Akcja w kontrolerze
     def surprise
     end

    3. Klasa w widoku (bardzo wazne: remote:true) w tej klasie bedzie sie duzo dziac
      <div id="content-placeholder">
          <%= link_to "Niespodzianka", surprise_posts_path, class: "btn btn-info", remote: true %>
      </div>

    4. Nowy katalog z ajaxem w views:  surprise.js.erb

       $("#content-placeholder").html("<%= escape_javascript(render(partial: "surprise_content")) %>");


    5. Prashal takze w views : _surprise_content.html.erb
       <div class="jumbotron">
         <h1>Niespodzianka?</h1>
         <p> To jest fajna niespodzianka </p>
         <p><%= link_to "Sprawdz to", posts_path, class: "btn btn-lg btn-primary" %></p>
       </div>
